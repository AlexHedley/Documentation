@using System.Linq;
@using System.Collections.Generic;
@using Microsoft.Extensions.Configuration;
@using Chloroplast.Core.Extensions;
@{
  string RenderSidenav(IConfigurationSection section, IConfigurationSection parent, bool isInit, string activeState)
  {
    var children = section.GetChildren();
    if (children.Any())
    {

      string listAttributes = isInit ? "nav-accordion accordion" : "";
      string primaryAttribute = isInit ? "primary" : "";

      @if(isInit){
        var par = parent.GetChildren();
        <div class="mobile-subnav-controls"> 
          <button class="nav-toggle back"><span class="visually-hidden">Back</span></button>
          <span>@par.First()["title"]</span>
          @* <a href="@par.First()["path"]">@par.First()["title"]</a> *@
        </div>
      }
      <ul class="@listAttributes @activeState">

        @foreach (var item in children)
        {
          string activeAttribute = Model.Node.Slug.Contains(item["path"]) ? "active" : "not-active";

          <li>
            <a aria-expanded="false" href="@item["path"]" tabindex="-1" class="trigger @primaryAttribute @activeAttribute"><span tabindex="0">@item["title"]</span></a>
            @if (item.ContainsKey("items"))
            {
              @Raw(RenderSidenav(item.GetSection("items"), parent, false, activeAttribute))
            }
            </li>
        }
      </ul>
    }
    return "";
  }

  string RenderBreadcrumbs(IConfigurationSection section)
    {
      var children = section.GetChildren();

      if (children.Any())
      {
        @foreach (var item in children)
        {
           @if (item.ContainsKey("items") && Model.Node.Slug.Contains(item["path"]))
            {
              <li><a aria-expanded="false" href="@item["path"]">@item["title"]</a></li>
              @Raw(RenderBreadcrumbs(item.GetSection("items")))
            }
        }
      }
    return "";
  }

  string GetRootPage(IConfigurationSection section)
    {
      var children = section.GetChildren();

      if (children.Any())
      {
        <a href="@children.First()["path"]">@children.First()["title"]</a>
      }
    return "";
  }
}

<section>
  <ul class="breadcrumbs">
    <li><a href="/">Home</a></li>
    <li>@GetRootPage(Model.Metadata.GetSection("parent"))</li>
    @RenderBreadcrumbs(Model.Metadata.GetSection("navTree"))
  </ul>
</section>

<section class="sidebar">
  <div class="nav-accordion-wrapper">
    @RenderSidenav(Model.Metadata.GetSection ("navTree"), Model.Metadata.GetSection("parent"), true, "")
  </div>
</section>

